{
  "id": "101b99ae-1cea-80e2-b146-c934917f74d3",
  "date": "2021-11-05",
  "type": "Post",
  "category": "技术分享",
  "slug": "invisible",
  "tags": [
    ""
  ],
  "summary": "游戏服务器性能优化之架构设计篇",
  "title": "游戏服务器性能优化之架构设计篇",
  "status": "Published",
  "detail": {
    "101b99ae-1cea-80e2-b146-c934917f74d3": {
      "value": {
        "id": "101b99ae-1cea-80e2-b146-c934917f74d3",
        "version": 25,
        "type": "page",
        "properties": {
          "NX\\Q": [
            [
              "‣",
              [
                [
                  "d",
                  {
                    "type": "date",
                    "start_date": "2021-11-05"
                  }
                ]
              ]
            ]
          ],
          "`gQ~": [
            [
              "Post"
            ]
          ],
          "bB{M": [
            [
              "技术分享"
            ]
          ],
          "d]hq": [
            [
              "invisible"
            ]
          ],
          "sD^m": [
            [
              ""
            ]
          ],
          "wz|S": [
            [
              "游戏服务器性能优化之架构设计篇"
            ]
          ],
          "title": [
            [
              "游戏服务器性能优化之架构设计篇"
            ]
          ],
          "f211bdc0-ee00-4186-9a7d-f68c055ec2ee": [
            [
              "Published"
            ]
          ]
        },
        "content": [
          "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
          "101b99ae-1cea-80c1-9bb5-e893e712c4d9"
        ],
        "format": {
          "page_font": "serif",
          "page_cover": "/images/page-cover/gradients_5.png",
          "block_locked": false,
          "block_locked_by": "27074aef-7216-41ed-baef-d9b53addd870",
          "copied_from_pointer": {
            "id": "101b99ae-1cea-80b7-a2f9-f301a2692f88",
            "table": "block",
            "spaceId": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
          },
          "page_cover_position": 0.6,
          "social_media_image_preview_url": "https://prod-files-secure.s3.us-west-2.amazonaws.com/03c61fc7-8ae2-451d-80f2-118e6ce2d9cd/8fe125a5-0989-4b48-b477-ccd2556f88ff/SocialMediaPreviewImage.png"
        },
        "created_time": 1726297933158,
        "last_edited_time": 1726300600983,
        "parent_id": "f1452d75-8526-49e3-8657-4fd7ef55e152",
        "parent_table": "collection",
        "alive": true,
        "copied_from": "101b99ae-1cea-80b7-a2f9-f301a2692f88",
        "file_ids": [
          "8fe125a5-0989-4b48-b477-ccd2556f88ff"
        ],
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "54a47a0d-391d-412f-912f-907d897e52bd": {
      "value": {
        "id": "54a47a0d-391d-412f-912f-907d897e52bd",
        "version": 119,
        "type": "collection_view_page",
        "content": [
          "9849a0d1-82a7-46f8-85d4-68b9db92a92b"
        ],
        "view_ids": [
          "a0152dc5-e7e8-4f29-9c37-b1fb486040e5",
          "af27229a-9c1c-4379-b779-20cb62c86bc4",
          "a33ce80a-303e-4722-9b6f-639f3c32f10d",
          "7fe61317-1745-4dec-9d31-f01020c4155e"
        ],
        "collection_id": "f1452d75-8526-49e3-8657-4fd7ef55e152",
        "format": {
          "site_id": "51847d78-4b83-4b0c-93df-c5907104c1cd",
          "block_locked": false,
          "block_locked_by": "27074aef-7216-41ed-baef-d9b53addd870",
          "collection_pointer": {
            "id": "f1452d75-8526-49e3-8657-4fd7ef55e152",
            "table": "collection",
            "spaceId": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
          },
          "copied_from_pointer": {
            "id": "02ab3b86-7800-4aa6-9e9e-415905ef32a5",
            "table": "block",
            "spaceId": "6c096b44-beb9-48ee-8f92-1efdde47f3a3"
          },
          "page_cover_position": 0.5
        },
        "permissions": [
          {
            "role": "reader",
            "type": "public_permission",
            "is_site": true,
            "added_timestamp": 1725446328326
          },
          {
            "role": {
              "read_content": true,
              "insert_content": true,
              "update_content": true
            },
            "type": "bot_permission",
            "bot_id": "1f5b99ae-1cea-8101-adeb-00279282a15f",
            "parent_id": "80a8a328-0748-4dd6-925e-6865939d4ae0",
            "parent_table": "notion_user"
          },
          {
            "role": {
              "read_comment": true,
              "read_content": true,
              "insert_comment": true,
              "insert_content": true,
              "update_content": true
            },
            "type": "bot_permission",
            "bot_id": "1f6b99ae-1cea-8187-bd91-0027b7252bca",
            "parent_id": "80a8a328-0748-4dd6-925e-6865939d4ae0",
            "parent_table": "notion_user"
          },
          {
            "role": {
              "read_content": true,
              "insert_content": true,
              "update_content": true
            },
            "type": "bot_permission",
            "bot_id": "66be2e14-23ce-4798-9d2e-b1104a06653a",
            "parent_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd",
            "parent_table": "space"
          },
          {
            "role": {
              "read_content": true,
              "insert_content": true,
              "update_content": true
            },
            "type": "bot_permission",
            "bot_id": "90053442-be1a-4630-99f4-2c04f2706259",
            "parent_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd",
            "parent_table": "space"
          }
        ],
        "created_time": 1725446287995,
        "last_edited_time": 1748700122053,
        "parent_id": "078a9301-9747-4213-900b-e1a2eda4f4dd",
        "parent_table": "team",
        "alive": true,
        "copied_from": "02ab3b86-7800-4aa6-9e9e-415905ef32a5",
        "file_ids": [
          "1e87c98f-7b57-4634-9f9e-8eedc62ace2e"
        ],
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "0c35dd19-21e2-4ff7-8a08-583c4fa5080d": {
      "value": {
        "id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "version": 42,
        "type": "transclusion_container",
        "content": [
          "6c4dded2-3106-4532-a736-0bf980dd3b8d",
          "bd85146c-d0e4-4d01-815f-8cfa1866df7f",
          "ab0ff6e5-1471-4019-9e8e-83e5b32e1898",
          "b1992646-27b4-4994-b6d1-a03f8ad0c4f8",
          "6ccdff86-0f0f-41dd-af2e-f2f12d25be27",
          "dfbf237f-33f6-441b-930a-154cbfbc30e1",
          "14b41886-259f-49ff-b9ba-512f9e80e9c3",
          "aa160f0f-4201-4b66-b1bd-4f8a88c15ea3",
          "ca28c9b7-8efb-43df-88cf-fa7f561ae935",
          "0fda28e4-4ad6-40e8-940f-4c8ee5d79234",
          "e513e261-6906-4438-85cb-18f16027c98a",
          "f57af7b9-3177-4537-9e5f-e04c49a768e7",
          "1cc9a5bf-65d8-4b52-99dd-edbf0bb8ed21",
          "52b5ca2e-211b-4ea2-a5b9-cbe85cdec9d5",
          "f5f2805c-469d-4f89-9e7b-f406f4ed5c1a",
          "1f7454fd-383f-4632-a741-e0ccdbce0a0c",
          "b3115c8a-0298-4c5e-b3ad-b1c93742dc30",
          "40a35ece-6a17-405b-9ff0-32764c52cd37",
          "269021f9-6908-4f35-aa16-b33a862eeafe",
          "4d13048c-1442-4b74-8b0d-b95679fbb8fb",
          "7c6ecaf5-f940-4480-9da6-bf5aa9cac7d2",
          "a7535b5a-7da7-4815-8dbe-6208419caa33",
          "266f319a-e57e-4990-88d7-c3029a242122",
          "8d51dcbb-436b-496a-9133-436e43fa4275",
          "2ca3fcb9-cd8a-43ba-bb55-7578e9f42f5b",
          "6297e239-4535-4522-8d56-4e1d75ba31a4",
          "d8cd8402-028c-4e57-bc9e-98be7bab5e44",
          "e4d89755-5be6-4a91-99d7-e48ee19b79b9",
          "425ac982-8113-414a-809c-d91ce68460b4",
          "d22acf5a-4362-418c-a4cb-3af208a03ae0",
          "aa1ac7cd-816a-4b56-acd8-deeafde968fb",
          "7f1bdd91-b753-4044-8647-b9046d67b52b",
          "09e43ead-319c-44c4-9071-15d294adfa43",
          "f0899ba8-53bc-4f84-8c95-78aeb5e4e182",
          "b47917f1-4e42-47bd-829c-efcd9329ea6d",
          "8b81a927-d902-45c5-a631-26f9dfc8a530",
          "ac7e3c3a-c9d9-474a-a146-c6cd77df9b75",
          "c9b1b4fb-ff73-47b0-8de7-ad9f85d44149",
          "a13a7b76-9615-4be7-9b1a-7207298fee69"
        ],
        "format": {
          "copied_from_pointer": {
            "id": "aab28629-d24f-44b3-80e3-48b60bfe9cc6",
            "table": "block",
            "spaceId": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
          }
        },
        "created_time": 1726297933157,
        "last_edited_time": 1726300076266,
        "parent_id": "101b99ae-1cea-80e2-b146-c934917f74d3",
        "parent_table": "block",
        "alive": true,
        "copied_from": "aab28629-d24f-44b3-80e3-48b60bfe9cc6",
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "101b99ae-1cea-80c1-9bb5-e893e712c4d9": {
      "value": {
        "id": "101b99ae-1cea-80c1-9bb5-e893e712c4d9",
        "version": 3,
        "type": "text",
        "created_time": 1726300088309,
        "last_edited_time": 1726300088310,
        "parent_id": "101b99ae-1cea-80e2-b146-c934917f74d3",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "6c4dded2-3106-4532-a736-0bf980dd3b8d": {
      "value": {
        "id": "6c4dded2-3106-4532-a736-0bf980dd3b8d",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "游戏服务器是一个复杂的分布式系统,其性能的优劣直接影响到玩家的游戏体验和运营的经济效益。因此,在设计游戏服务器架构时,必须考虑性能、可靠性、可扩展性、可维护性等多个方面。本文将重点探讨几种常见的游戏服务器架构模式,分析其优缺点,并提出优化建议。"
            ]
          ]
        },
        "created_time": 1726300076248,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "bd85146c-d0e4-4d01-815f-8cfa1866df7f": {
      "value": {
        "id": "bd85146c-d0e4-4d01-815f-8cfa1866df7f",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "一、分布式服务器架构"
            ]
          ]
        },
        "created_time": 1726300076248,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "ab0ff6e5-1471-4019-9e8e-83e5b32e1898": {
      "value": {
        "id": "ab0ff6e5-1471-4019-9e8e-83e5b32e1898",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "传统的游戏服务器大多采用单服务器架构,即一台高性能服务器承担所有的游戏逻辑和数据处理任务。这种架构简单易部署,在玩家规模较小时性能尚可,但随着玩家数量的增长,单点故障、性能瓶颈等问题逐渐凸显。"
            ]
          ]
        },
        "created_time": 1726300076248,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "b1992646-27b4-4994-b6d1-a03f8ad0c4f8": {
      "value": {
        "id": "b1992646-27b4-4994-b6d1-a03f8ad0c4f8",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "现代的大型网络游戏大多采用分布式服务器架构来提升系统性能和稳定性。常见的分布式架构有以下几种:"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "6ccdff86-0f0f-41dd-af2e-f2f12d25be27": {
      "value": {
        "id": "6ccdff86-0f0f-41dd-af2e-f2f12d25be27",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "功能分割:按照不同的功能模块(如登录、匹配、对战、聊天等)将服务器划分为多个独立的服务进程,各司其职。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "dfbf237f-33f6-441b-930a-154cbfbc30e1": {
      "value": {
        "id": "dfbf237f-33f6-441b-930a-154cbfbc30e1",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "地理分区:根据玩家的地理位置就近部署游戏服务器,提升玩家的网络访问速度和游戏体验。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "14b41886-259f-49ff-b9ba-512f9e80e9c3": {
      "value": {
        "id": "14b41886-259f-49ff-b9ba-512f9e80e9c3",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "逻辑分区:将游戏世界按照一定的逻辑规则(如地图区域、玩家等级)切分成多个相对独立的逻辑服,减少不同区域间的数据干扰。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "aa160f0f-4201-4b66-b1bd-4f8a88c15ea3": {
      "value": {
        "id": "aa160f0f-4201-4b66-b1bd-4f8a88c15ea3",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "分布式架构通过解耦和异构来提升服务器的性能和可扩展性。不同的服务器可以根据其承担的任务配置不同的硬件和软件资源,避免了\"一刀切\"的资源浪费。服务器之间通过成熟的RPC框架进行通信,既降低了系统的耦合度,又提高了开发效率。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "ca28c9b7-8efb-43df-88cf-fa7f561ae935": {
      "value": {
        "id": "ca28c9b7-8efb-43df-88cf-fa7f561ae935",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "但分布式架构也引入了新的复杂度,需要很好地处理服务器之间的一致性、同步和故障问题。常用的一致性方案有:"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "0fda28e4-4ad6-40e8-940f-4c8ee5d79234": {
      "value": {
        "id": "0fda28e4-4ad6-40e8-940f-4c8ee5d79234",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "客户端权威:关键数据由客户端生成并同步给服务器,简化了服务器端的一致性逻辑。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "e513e261-6906-4438-85cb-18f16027c98a": {
      "value": {
        "id": "e513e261-6906-4438-85cb-18f16027c98a",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "主从同步:服务器之间通过主从复制保持数据一致,从服务器可以分担主服务器的读压力。"
            ]
          ]
        },
        "created_time": 1726300076249,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "f57af7b9-3177-4537-9e5f-e04c49a768e7": {
      "value": {
        "id": "f57af7b9-3177-4537-9e5f-e04c49a768e7",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "多数派协议:多个对等的服务器通过Paxos、Raft等共识算法在状态变更时达成一致。"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "1cc9a5bf-65d8-4b52-99dd-edbf0bb8ed21": {
      "value": {
        "id": "1cc9a5bf-65d8-4b52-99dd-edbf0bb8ed21",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "最终一致:允许服务器状态暂时不一致,通过事后的冲突解决和数据融合达成最终一致。"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "52b5ca2e-211b-4ea2-a5b9-cbe85cdec9d5": {
      "value": {
        "id": "52b5ca2e-211b-4ea2-a5b9-cbe85cdec9d5",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "二、服务器集群与负载均衡"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "f5f2805c-469d-4f89-9e7b-f406f4ed5c1a": {
      "value": {
        "id": "f5f2805c-469d-4f89-9e7b-f406f4ed5c1a",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "除了业务逻辑的分割,提升游戏服务器性能的另一个重点是充分利用服务器资源。集群化部署和负载均衡就是两种行之有效的手段。"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "1f7454fd-383f-4632-a741-e0ccdbce0a0c": {
      "value": {
        "id": "1f7454fd-383f-4632-a741-e0ccdbce0a0c",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "服务器集群指将多台服务器组成一个松耦合的、可互相协作的集群,共同承担同一个功能或服务。当单台服务器出现故障时,集群中的其他服务器可以接替工作,从而提供高可用的服务。在负载较高时,也可以弹性地增加服务器节点来提升系统性能。常见的开源集群管理方案有Kubernetes、Docker Swarm等。"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "b3115c8a-0298-4c5e-b3ad-b1c93742dc30": {
      "value": {
        "id": "b3115c8a-0298-4c5e-b3ad-b1c93742dc30",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "负载均衡则是指将大量的并发访问或数据请求分担到多个服务器上,避免单台服务器的性能瓶颈。常见的负载均衡策略有:"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "40a35ece-6a17-405b-9ff0-32764c52cd37": {
      "value": {
        "id": "40a35ece-6a17-405b-9ff0-32764c52cd37",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "轮询:将请求依次轮流分配到不同的服务器上"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "269021f9-6908-4f35-aa16-b33a862eeafe": {
      "value": {
        "id": "269021f9-6908-4f35-aa16-b33a862eeafe",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "加权轮询:根据服务器的性能配置,为每台服务器分配不同的权重,权重越高的服务器分配的请求越多"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "4d13048c-1442-4b74-8b0d-b95679fbb8fb": {
      "value": {
        "id": "4d13048c-1442-4b74-8b0d-b95679fbb8fb",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "最小连接:将请求分配到当前连接数最少的服务器"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "7c6ecaf5-f940-4480-9da6-bf5aa9cac7d2": {
      "value": {
        "id": "7c6ecaf5-f940-4480-9da6-bf5aa9cac7d2",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "一致性哈希:根据请求的某些特征值映射到固定的服务器上,避免重复的数据迁移"
            ]
          ]
        },
        "created_time": 1726300076250,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "a7535b5a-7da7-4815-8dbe-6208419caa33": {
      "value": {
        "id": "a7535b5a-7da7-4815-8dbe-6208419caa33",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "地理位置:将请求分配到地理位置最近的服务器,降低网络传输延迟"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "266f319a-e57e-4990-88d7-c3029a242122": {
      "value": {
        "id": "266f319a-e57e-4990-88d7-c3029a242122",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "负载均衡可以通过硬件(如F5)或软件(如LVS、Nginx)来实现。为了避免负载均衡服务器本身成为单点故障,通常还需要对负载均衡服务器进行高可用部署。"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "8d51dcbb-436b-496a-9133-436e43fa4275": {
      "value": {
        "id": "8d51dcbb-436b-496a-9133-436e43fa4275",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "三、微服务化的游戏服务器"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "2ca3fcb9-cd8a-43ba-bb55-7578e9f42f5b": {
      "value": {
        "id": "2ca3fcb9-cd8a-43ba-bb55-7578e9f42f5b",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "随着游戏业务的不断发展和迭代,传统的单体服务器架构逐渐暴露出可维护性差、发布效率低等问题。微服务架构作为一种新兴的、松耦合的分布式架构风格,为游戏服务器的开发和运维带来了新的思路。"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "6297e239-4535-4522-8d56-4e1d75ba31a4": {
      "value": {
        "id": "6297e239-4535-4522-8d56-4e1d75ba31a4",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "微服务架构的核心理念是\"高内聚、低耦合\",即通过领域边界划分出很多独立的、细粒度的服务,每个服务专注于做好一件事情。服务间通过轻量级的通信协议(如HTTP、gRPC)进行数据交互,并通过API网关、服务发现等基础设施屏蔽服务的分布式细节。"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "d8cd8402-028c-4e57-bc9e-98be7bab5e44": {
      "value": {
        "id": "d8cd8402-028c-4e57-bc9e-98be7bab5e44",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "微服务化的游戏服务器可以获得以下收益:"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "e4d89755-5be6-4a91-99d7-e48ee19b79b9": {
      "value": {
        "id": "e4d89755-5be6-4a91-99d7-e48ee19b79b9",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "单个服务代码量小、复杂度低,易于理解和维护"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "425ac982-8113-414a-809c-d91ce68460b4": {
      "value": {
        "id": "425ac982-8113-414a-809c-d91ce68460b4",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "不同的服务可以选择最适合的技术栈,提高开发效率"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "d22acf5a-4362-418c-a4cb-3af208a03ae0": {
      "value": {
        "id": "d22acf5a-4362-418c-a4cb-3af208a03ae0",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "服务可以独立地进行扩缩容、升级发布,提高系统灵活性"
            ]
          ]
        },
        "created_time": 1726300076251,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "aa1ac7cd-816a-4b56-acd8-deeafde968fb": {
      "value": {
        "id": "aa1ac7cd-816a-4b56-acd8-deeafde968fb",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "服务之间松耦合,一个服务的故障不会殃及整个系统"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "7f1bdd91-b753-4044-8647-b9046d67b52b": {
      "value": {
        "id": "7f1bdd91-b753-4044-8647-b9046d67b52b",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "服务的边界清晰,便于不同团队并行开发、提高协作效率"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "09e43ead-319c-44c4-9071-15d294adfa43": {
      "value": {
        "id": "09e43ead-319c-44c4-9071-15d294adfa43",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "当然,微服务化也不是银弹,它引入了服务调用、数据一致性、运维监控等新的复杂性。因此,在决定是否采用微服务架构时,需要全面评估系统的业务需求、团队能力和技术积累,对症下药,避免过度设计。"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "f0899ba8-53bc-4f84-8c95-78aeb5e4e182": {
      "value": {
        "id": "f0899ba8-53bc-4f84-8c95-78aeb5e4e182",
        "version": 3,
        "type": "text",
        "properties": {
          "title": [
            [
              "一些建议的实践是:"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "b47917f1-4e42-47bd-829c-efcd9329ea6d": {
      "value": {
        "id": "b47917f1-4e42-47bd-829c-efcd9329ea6d",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "在系统规模较小、变更不频繁时,优先考虑单体架构以降低复杂度"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "8b81a927-d902-45c5-a631-26f9dfc8a530": {
      "value": {
        "id": "8b81a927-d902-45c5-a631-26f9dfc8a530",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "在系统规模较大、团队协作困难时,优先考虑微服务拆分以提高并行开发效率"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "ac7e3c3a-c9d9-474a-a146-c6cd77df9b75": {
      "value": {
        "id": "ac7e3c3a-c9d9-474a-a146-c6cd77df9b75",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "在系统规模快速增长时,优先考虑微服务化以提高系统的可扩展性"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "c9b1b4fb-ff73-47b0-8de7-ad9f85d44149": {
      "value": {
        "id": "c9b1b4fb-ff73-47b0-8de7-ad9f85d44149",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "在系统需要持续集成、频繁发布时,优先考虑微服务化以提高发布效率"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "a13a7b76-9615-4be7-9b1a-7207298fee69": {
      "value": {
        "id": "a13a7b76-9615-4be7-9b1a-7207298fee69",
        "version": 3,
        "type": "numbered_list",
        "properties": {
          "title": [
            [
              "从系统的核心领域和稳定性需求高的领域开始微服务拆分,降低初期的风险"
            ]
          ]
        },
        "created_time": 1726300076252,
        "last_edited_time": 1726300076266,
        "parent_id": "0c35dd19-21e2-4ff7-8a08-583c4fa5080d",
        "parent_table": "block",
        "alive": true,
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    },
    "9849a0d1-82a7-46f8-85d4-68b9db92a92b": {
      "value": {
        "id": "9849a0d1-82a7-46f8-85d4-68b9db92a92b",
        "version": 1,
        "type": "text",
        "properties": {
          "title": [
            [
              "😅"
            ]
          ]
        },
        "format": {
          "copied_from_pointer": {
            "id": "254eced8-9cba-4f90-9990-a885bd567dd0",
            "table": "block",
            "spaceId": "6c096b44-beb9-48ee-8f92-1efdde47f3a3"
          }
        },
        "created_time": 1725446270807,
        "last_edited_time": 1725446270807,
        "parent_id": "54a47a0d-391d-412f-912f-907d897e52bd",
        "parent_table": "block",
        "alive": true,
        "copied_from": "254eced8-9cba-4f90-9990-a885bd567dd0",
        "space_id": "03c61fc7-8ae2-451d-80f2-118e6ce2d9cd"
      },
      "role": "reader"
    }
  }
}