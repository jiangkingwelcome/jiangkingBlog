doctype html
html(lang="zh-CN")
  head
    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=2,viewport-fit=cover")
    meta(http-equiv="X-UA-Compatible" content="IE=edge,chrome=1")
    meta(name="renderer" content="webkit")
    
    //- SEO优化：完善Meta标签
    title #{title} - JiangKing博客
    meta(name="description" content=`${summary || '阅读JiangKing博客上的《'+title+'》，探索更多技术内容'}`)
    meta(name="keywords" content=`${tags ? tags.join(',') : ''}, ${title}, 博客, JiangKing`)
    meta(name="author" content=`${author || 'JiangKing'}`)
    
    //- 社交分享Meta标签
    meta(property="og:title" content=`${title} - JiangKing博客`)
    meta(property="og:description" content=`${summary || '阅读JiangKing博客上的《'+title+'》，探索更多技术内容'}`)
    meta(property="og:type" content="article")
    meta(property="og:url" content=`${config && config.url ? config.url : 'https://jiangking.com'}/blog/${id}.html`)
    meta(property="article:published_time" content=`${date}`)
    meta(property="article:author" content=`${author || 'JiangKing'}`)
    if tags && tags.length
      each tag in tags
        meta(property="article:tag" content=tag)
    
    //- 移动友好优化
    meta(name="theme-color" content="#0f0f23")
    meta(name="apple-mobile-web-app-capable" content="yes")
    meta(name="apple-mobile-web-app-status-bar-style" content="black-translucent")
    
    //- 预加载关键资源
    link(rel="preload" href="/css/blog.css" as="style")
    
    link(rel="stylesheet" href="/css/blog.css")
    style.
      .image-container {
        margin: 20px 0;
        text-align: center;
        position: relative;
      }
      
      .image-container img {
        max-width: 100%;
        min-height: 150px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        loading: lazy; /* 延迟加载优化 */
      }
      
      /* 特殊样式用于SVG图片 */
      .image-container img.svg-image {
        background-color: #f8f9fa;
        padding: 10px;
        border: 1px solid #e2e8f0;
      }
      
      .image-container img.error {
        border: 1px dashed #ff5555;
        background-color: #ffecea;
      }
      
      /* 移动端优化样式 */
      @media (max-width: 768px) {
        .article-header {
          padding: 60px 15px 30px;
        }
        
        .article-title {
          font-size: 1.8rem;
          line-height: 1.3;
        }
        
        .article-meta {
          flex-wrap: wrap;
          gap: 8px;
        }
        
        .article-container {
          padding: 20px 15px;
        }
      }
  body
    .dynamic-bg
    .grid-bg
    .cursor-glow#cursorGlow
    .progress-bar#progressBar
    
    //- 增强语义化：使用header标签
    header.top-nav(role="banner")
      .nav-left
        a.back-btn(href="/blog/" title="返回首页" aria-label="返回博客首页") ←
        h3.site-title JiangKing
      .nav-right
        button.nav-btn(title="目录" aria-label="查看文章目录") 📑
        button.nav-btn(title="暗色模式" aria-label="切换暗色模式") 🌙
        button.nav-btn(title="分享" aria-label="分享文章") 🔗
        
    //- 文章头部
    section.article-header
      .header-bg
        canvas#headerCanvas
      .header-content
        h1.article-title(itemprop="headline") #{title}
        .article-meta
          span.meta-item
            span.meta-icon 👤
            span(itemprop="author") #{author}
          span.meta-item
            span.meta-icon 📅
            time(itemprop="datePublished" datetime=date) #{date}
          span.meta-item
            span.meta-icon ⏱️
            span 1 min read
          span.meta-item
            span.meta-icon 👁️
            span 1.2k
            
    //- 增强语义化：使用article标签
    article.article-container(itemscope itemtype="https://schema.org/BlogPosting")
      //- 隐藏的元数据
      meta(itemprop="headline" content=title)
      meta(itemprop="author" content=author)
      meta(itemprop="datePublished" content=date)
      if tags && tags.length
        each tag in tags
          meta(itemprop="keywords" content=tag)
          
      //- 文章内容
      .article-content(itemprop="articleBody")
        | !{content}
        
      //- 文章标签
      section.article-tags(role="contentinfo" aria-label="文章标签")
        each tag in tags || []
          a.tag(href=`/blog/?tag=${tag}` rel="tag") #{tag}
          
      //- 作者信息
      section.author-info(itemscope itemtype="https://schema.org/Person")
        .author-avatar
          img(src="/assets/avatar.jpg" alt=author itemprop="image" loading="lazy")
        .author-details
          h4(itemprop="name") #{author}
          p.author-bio(itemprop="description") STDIN | Think >> /dev/Mind✨ - 专注于技术分享与思考
          
      //- 相关文章
      section.related-posts(aria-labelledby="related-posts-title")
        h3.section-title#related-posts-title 相关文章
        .related-grid(role="feed" aria-label="相关文章列表")
          //- 相关文章内容
          
    //- 文章底部操作栏
    div.article-actions(role="toolbar" aria-label="文章操作")
      button.action-btn(title="点赞" aria-label="点赞文章") 👍
      button.action-btn(title="收藏" aria-label="收藏文章") ⭐
      button.action-btn(title="评论" aria-label="查看或发表评论") 💬
      .action-divider
      button.action-btn(title="分享" aria-label="分享文章") 📤
      button.action-btn(title="回到顶部" onclick="scrollToTop()" aria-label="回到页面顶部") ⬆️
      
    //- 目录导航
    nav.toc#toc(role="navigation" aria-label="文章目录")
      h4.toc-title 目录
      ul.toc-list
        //- 目录内容
        
    //- 添加结构化数据
    script(type="application/ld+json").
      {
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": "#{title}",
        "datePublished": "#{date}",
        "dateModified": "#{modifiedDate || date}",
        "author": {
          "@type": "Person",
          "name": "#{author || 'JiangKing'}"
        },
        "publisher": {
          "@type": "Organization",
          "name": "JiangKing博客",
          "logo": {
            "@type": "ImageObject",
            "url": "https://jiangking.com/assets/avatar.jpg"
          }
        },
        "description": "#{summary || '阅读JiangKing博客上的《'+title+'》，探索更多技术内容'}",
        "mainEntityOfPage": {
          "@type": "WebPage",
          "@id": "#{config && config.url ? config.url : 'https://jiangking.com'}/blog/#{id}.html"
        }
      }

    script.
      // 页面加载完成后执行
      document.addEventListener('DOMContentLoaded', function() {
        console.log('开始处理图片显示问题');
        
        // 检测浏览器是否支持webp格式
        function checkWebpSupport() {
          const canvas = document.createElement('canvas');
          if (!canvas.getContext || !canvas.getContext('2d')) {
            return false;
          }
          
          return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0;
        }
        
        const supportsWebp = checkWebpSupport();
        console.log('浏览器支持webp格式:', supportsWebp);

        // 1. 处理直接显示为文本的图片URL (657bf33bfbf478066fd24f11b0eb95f7.webp)
        const allElements = document.querySelectorAll('.article-content *');
        allElements.forEach(el => {
          // 检查是否为纯文本元素且文本内容像图片URL
          const content = el.textContent ? el.textContent.trim() : '';
          if (content && (
              content.match(/[a-f0-9]{32}\.webp$/i) ||
              content.match(/\.(webp|jpg|png|gif|jpeg)$/i)
            ) &&
            el.childNodes.length === 1 &&
            el.childNodes[0].nodeType === Node.TEXT_NODE) {
            
            console.log('找到可能是图片URL的文本:', content);
            
            // 创建图片容器和图片元素
            const imgContainer = document.createElement('div');
            imgContainer.className = 'image-container';
            
            const img = document.createElement('img');
            
            // 尝试构造正确的图片路径
            if (content.startsWith('/')) {
              // 已经是相对路径
              img.src = content;
            } else if (content.match(/[a-f0-9]{32}\.webp$/i) || content.endsWith('.webp')) {
              // 看起来像是在当前文章目录下的webp图片
              const articleId = window.location.pathname.split('/').pop().replace('.html', '');
              img.src = `/blog/images/${articleId}/${content}`;
            } else {
              // 默认使用占位图
              img.src = '/assets/placeholder-image.svg';
            }
            
            // 添加错误处理
            img.alt = '文章图片';
            img.setAttribute('data-original-text', content);
            img.onerror = function() {
              this.onerror = null;
              this.src = '/assets/placeholder-image.svg';
              this.classList.add('error');
            };
            
            imgContainer.appendChild(img);
            
            // 替换元素
            el.parentNode.replaceChild(imgContainer, el);
          }
        });
        
        // 2. 检查图片容器内容
        const imageContainers = document.querySelectorAll('.image-container');
        console.log('找到图片容器:', imageContainers.length);
        
        imageContainers.forEach((container) => {
          // 检查容器是否只有文本内容
          if (!container.querySelector('img') && container.textContent.trim()) {
            const content = container.textContent.trim();
            console.log('图片容器内只有文本:', content);
            
            // 清空容器
            container.innerHTML = '';
            
            // 创建图片元素
            const img = document.createElement('img');
            
            // 尝试构造正确的图片路径
            if (content.match(/[a-f0-9]{32}\.webp$/i) || content.endsWith('.webp')) {
              // webp图片
              const articleId = window.location.pathname.split('/').pop().replace('.html', '');
              img.src = `/blog/images/${articleId}/${content}`;
            } else {
              // 使用占位图
              img.src = '/assets/placeholder-image.svg';
            }
            
            // 添加错误处理
            img.alt = '文章图片';
            img.setAttribute('data-text-content', content);
            img.onerror = function() {
              this.onerror = null;
              this.src = '/assets/placeholder-image.svg';
              this.classList.add('error');
            };
            
            // 添加到容器
            container.appendChild(img);
          }
        });
        
        // 3. 处理所有图片加载错误
        const images = document.querySelectorAll('img');
        console.log('找到图片元素:', images.length);
        
        images.forEach((img) => {
          // 检查是否为SVG图片
          if (img.src.toLowerCase().endsWith('.svg')) {
            console.log('检测到SVG图片:', img.src);
            img.classList.add('svg-image');
            // SVG图片不需要错误处理
            return;
          }
          
          if (img.complete && img.naturalHeight === 0) {
            // 已经加载失败的图片
            console.log('图片已加载失败:', img.src);
            img.classList.add('error');
            
            // 如果不是占位图，则替换为占位图
            if (!img.src.includes('placeholder-image')) {
              img.setAttribute('data-failed-src', img.src);
              img.src = '/assets/placeholder-image.svg';
              img.classList.add('svg-image'); // 添加SVG类
            }
          } else {
            // 添加加载错误处理
            img.addEventListener('error', function() {
              console.log('图片加载失败:', this.src);
              this.classList.add('error');
              
              // 如果不是占位图，则替换为占位图
              if (!this.src.includes('placeholder-image')) {
                this.setAttribute('data-failed-src', this.src);
                this.src = '/assets/placeholder-image.svg';
                this.classList.add('svg-image'); // 添加SVG类
              }
            });
          }
        });
      });

      // 滚动到顶部
      function scrollToTop() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }